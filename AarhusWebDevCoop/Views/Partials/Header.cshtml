@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    var homePage = CurrentPage.Site();
    var selection = homePage.Children.Where("Visible"); }



@if (selection.Any() || !homePage.umbracoNaviHide)
{
    <nav class="nav">
        <div class="nav-left">
            <a class="nav-item">
                @if (homePage.HasValue("logo"))
                {
                    var logoImagesList = homePage.logo.Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries);
                    var logoImagesListCollection = Umbraco.Media(logoImagesList);

                    foreach (var caseStudyImage in logoImagesListCollection)
                    {
                        <img src="@caseStudyImage.Url" class="img-responsive" style="max-height: 100%" />
                    }
                }

            </a>
        </div>

        <!-- This "nav-toggle" hamburger menu is only visible on mobile -->
        <!-- You need JavaScript to toggle the "is-active" class on "nav-menu" -->
        <span class="nav-toggle">
            <span></span>
            <span></span>
            <span></span>
        </span>

        <!-- This "nav-menu" is hidden on mobile -->
        <!-- Add the modifier "is-active" to display it on mobile -->
        <ul class="nav-right nav-menu">
            @if (!homePage.umbracoNaviHide)
            {
                <li class="nav-item @(CurrentPage.IsAncestorOrSelf(homePage) ? "is-active" : null)">
                    <a href="@homePage.Url">
                        @homePage.Name
                    </a>
                </li>
            }
            @foreach (var item in selection)
            {

                var isProtected = umbraco.library.IsProtected(item.id, item.path);
                var loginAccess = umbraco.library.IsProtected(item.id, item.path)
                                  && umbraco.library.HasAccess(item.id, item.path);

                if (item.Children.Any())
                {
                    <li class="dropdown nav-item @(item.IsAncestorOrSelf(CurrentPage) ? "is-active" : null)">
                        <a href="@item.Url">@item.Name</a>
                        <ul class="dropdown-menu">
                            @foreach (var itemChild in item.Children)
                            {
                                var isProtectedChild = umbraco.library.IsProtected(itemChild.id, itemChild.path);
                                var loginAccessChild = umbraco.library.IsProtected(itemChild.id, itemChild.path)
                                                       && umbraco.library.HasAccess(itemChild.id, itemChild.path);

                                if (!isProtectedChild || loginAccessChild)
                                {
                                    if ((Umbraco.GetPreValueAsString(itemChild.projectStatus).Equals("Completed") && !itemChild.umbracoNaviHide) || Umbraco.GetPreValueAsString(itemChild.projectStatus).Equals(""))
                                    {

                                        <li><a href="@itemChild.Url">@itemChild.Name</a></li>

                                    }
                                    else
                                    {
                                        var member = Members.GetCurrentLoginStatus().Username;
                                        if (member != null)
                                        {
                                            var roles = System.Web.Security.Roles.GetRolesForUser(member);
                                            if (roles.ToList().Contains("Active"))
                                            {
                                                if (!itemChild.umbracoNaviHide)
                                                {
                                                    <li><a href="@itemChild.Url">@itemChild.Name</a></li>
                                                }

                                            }
                                            else
                                            {
                                                if (roles.ToList().Contains("Guest"))
                                                {
                                                    if (Umbraco.GetPreValueAsString(itemChild.projectStatus).Equals("Initiated") && !itemChild.umbracoNaviHide)
                                                    {
                                                        <li><a href="@itemChild.Url">@itemChild.Name</a></li>
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        </ul>
                    </li>
                }
                else
                {
                    if (!isProtected || loginAccess)
                    {
                        if (item.DocumentTypeAlias.Equals("login"))
                        {
                            if (Umbraco.MemberIsLoggedOn())
                            {
                                <a href="@item.Url" class="nav-item @(item.IsAncestorOrSelf(CurrentPage) ? "current" : null)">
                                   Log Out
                                </a>
                            }
                            else
                            {
                                <a href="@item.Url" class="nav-item @(item.IsAncestorOrSelf(CurrentPage) ? "current" : null)">
                                    Log In
                                </a>
                            }
                        }
                        else
                        {
                            <a href="@item.Url" class="nav-item @(item.IsAncestorOrSelf(CurrentPage) ? "current" : null)">
                                @item.Name
                            </a>
                        }
                    }
                }
            }
            

            <span class="nav-item">
                <a href="https://github.com/jacobg213/Umrako" class="button">
                    <span class="icon">
                        <i class="fa fa-github"></i>
                    </span>
                    <span>Kuba's repo</span>
                </a>
                <a href="https://github.com/roszpun/Ubraco-assignment" class="button is-primary">
                    <span class="icon">
                        <i class="fa fa-github"></i>
                    </span>
                    <span>Daniel's repo</span>
                </a>
            </span>
        </ul>
    </nav>
}
